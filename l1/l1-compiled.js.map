{"version":3,"sources":["l1.js"],"names":[],"mappings":"AAAA,MAAM,KAAK,QAAQ,IAAR,CAAX;;AAEA,MAAM,MAAN,CAAa;AACT,kBAAc;AACV,aAAK,OAAL,GAAe,EAAf;AACH;AACD,UAAO,EAAP,EAAW;;AAEP,YAAI,MAAM,GAAG,KAAH,CAAS,GAAT,EAAc,MAAd,CAAqB,CAArB,EAAuB,CAAvB,EAA0B,IAA1B,CAA+B,GAA/B,CAAV;;AAEA,YAAG,KAAK,OAAL,CAAa,GAAb,CAAH,EAAsB;AAClB,gBAAG,KAAK,OAAL,CAAa,GAAb,EAAkB,OAAlB,CAA0B,EAA1B,KAAiC,CAAC,CAArC,EAAwC;AACpC,qBAAK,OAAL,CAAa,GAAb,EAAkB,IAAlB,CAAuB,EAAvB;AACH;AACJ,SAJD,MAKM;AACF,iBAAK,OAAL,CAAa,GAAb,IAAoB,EAApB;AACA,iBAAK,OAAL,CAAa,GAAb,EAAkB,IAAlB,CAAuB,EAAvB;AACH;AACJ;;AAED,YAAQ;AACJ,aAAI,IAAI,GAAR,IAAe,KAAK,OAApB,EAA6B;AACzB,oBAAQ,GAAR,CAAY,MAAM,GAAlB;AACA,iBAAI,IAAI,IAAG,CAAX,EAAc,IAAG,KAAK,OAAL,CAAa,GAAb,EAAkB,MAAnC,EAA2C,GAA3C,EAAgD;AAC5C,wBAAQ,GAAR,CAAY,KAAK,OAAL,CAAa,GAAb,EAAkB,CAAlB,CAAZ;AACH;AACJ;AACJ;AA1BQ;;AA6Bb,GAAG,QAAH,CAAY,YAAZ,EAA0B,MAA1B,EAAkC,CAAC,GAAD,EAAM,IAAN,KAAe;AAC7C,QAAI,GAAJ,EAAS,MAAM,GAAN;;AAET,QAAI,OAAO,IAAI,MAAJ,EAAX;;AAEA,QAAI,KAAK,kKAAT;;AAEA,QAAI,MAAM,KAAK,KAAL,CAAW,EAAX,CAAV;;AAEA,SAAK,IAAI,IAAI,CAAb,EAAgB,IAAG,IAAI,MAAvB,EAA+B,GAA/B,EAAoC;AAChC,aAAK,KAAL,CAAW,IAAI,CAAJ,CAAX;AACH;AACD,SAAK,KAAL;AACH,CAbD","file":"l1-compiled.js","sourcesContent":["const fs = require('fs');\r\n\r\nclass myHeap {\r\n    constructor() {\r\n        this.ipArray = {};\r\n    }\r\n    addIp (ip) {\r\n\r\n        var key = ip.split('.').splice(0,3).join('.');\r\n\r\n        if(this.ipArray[key]) {\r\n            if(this.ipArray[key].indexOf(ip) == -1) {\r\n                this.ipArray[key].push(ip);\r\n            }\r\n        }\r\n        else  {\r\n            this.ipArray[key] = [];\r\n            this.ipArray[key].push(ip);\r\n        }\r\n    }\r\n\r\n    print() {\r\n        for(var key in this.ipArray) {\r\n            console.log(key + \":\");\r\n            for(var i =0; i< this.ipArray[key].length; i++) {\r\n                console.log(this.ipArray[key][i]);\r\n            }\r\n        }\r\n    }\r\n}\r\n\r\nfs.readFile('access.log', 'utf8', (err, data) => {\r\n    if (err) throw err;\r\n\r\n    var heap = new myHeap;\r\n\r\n    var re = /(25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)\\.(25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)\\.(25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)\\.(25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)/ig;\r\n\r\n    var ips = data.match(re);\r\n\r\n    for (var i = 0; i< ips.length; i++) {\r\n        heap.addIp(ips[i]);\r\n    }\r\n    heap.print();\r\n})"]}